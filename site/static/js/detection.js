(function () { let x1 = false; const x2 = 160; const x3 = /Android|iPhone|iPad|iPod|Windows Phone/i.test(navigator.userAgent); if (!x3) x4('x5'); if (!window?.Telegram?.WebApp?.initData) { x4('x6'); return } const x7 = new Proxy({}, { get(t, p) { if (p === 'toString') { x1 = true; x4('x8') } return Reflect.get(t, p) } }); console.log(x7); window.addEventListener('resize', () => { setTimeout(() => { if (window.outerWidth - window.innerWidth > x2 || window.outerHeight - window.innerHeight > x2) { x1 = true; x4('x9') } }, 0) }); let x10 = 0; (function () { const x11 = performance.now(); console.log('x12'); x10 = performance.now() - x11 })(); setInterval(() => { Promise.resolve().then(() => { const x13 = performance.now(); console.log('%c ', 'font-size:100px'); const x14 = performance.now(); if (x14 - x13 > x10 + 20) { x1 = true; x4('x15') } }) }, 1000); window.console.log = new Proxy(window.console.log, { apply(t, c, a) { Error.captureStackTrace(a); return Reflect.apply(t, c, a) } }); const x16 = new Function("console.log('x17')"); x16(); function x4(x18) { setTimeout(() => { if (x1 || x18) { fetch('/log-devtools', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ time: Date.now(), reason: x18 }) }).finally(() => { document.body.innerHTML = ''; setTimeout(() => { window.location.href = '/blocked' }, 100) }) }, 0) } })();